-- ============================================================================
-- GOLD LAYER DATA VALIDATION TEST SCRIPT
-- ============================================================================
-- This script performs data integration and join validations for the Gold layer.
-- It includes checks for:
--   1. Gender integration from CRM and ERP sources.
--   2. Duplicate product keys (after filtering historical data).
--   3. Referential integrity between fact_sales and the dimension tables.

---------------------------------------------------------------
-- Section 1: Gender Integration Validation
---------------------------------------------------------------
-- This query displays the distinct gender values from CRM (cst_gndr) and ERP (gen),
-- and shows the resulting integrated gender value (new_gen) used in gold.dim_customers.
SELECT DISTINCT
    ci.cst_gndr,
    ca.gen,
    CASE 
         WHEN ci.cst_gndr <> 'Unknown' THEN ci.cst_gndr  -- CRM is the master
         ELSE COALESCE(ca.gen, 'Unknown')
    END AS new_gen
FROM silver.crm_cust_info ci
LEFT JOIN silver.erp_cust_az12 ca ON ci.cst_key = ca.cid
LEFT JOIN silver.erp_loc_a101 la ON ci.cst_key = la.cid
ORDER BY 1, 2;

---------------------------------------------------------------
-- Section 2: Product Key Duplication Check (Historical Data Filter)
---------------------------------------------------------------
-- Verify that after filtering out historical data (where prd_end_dt is NULL),
-- there are no duplicate product keys in silver.crm_prd_info.
SELECT prd_key, COUNT(*) AS duplicate_count
FROM (
    SELECT 
        pn.prd_id,
        pn.cat_id,
        pn.prd_key,
        pn.prd_nm,
        pn.prd_line,
        pn.prd_start_dt,
        pn.prd_end_dt,
        pc.cat,
        pc.subcat,
        pc.maintenance
    FROM silver.crm_prd_info pn
    LEFT JOIN silver.erp_px_cat_g1v2 pc ON pn.cat_id = pc.id
    WHERE pn.prd_end_dt IS NULL   -- filter out historical data
) t
GROUP BY prd_key
HAVING COUNT(*) > 1;

---------------------------------------------------------------
-- Section 3: Referential Integrity for Fact Sales - Customer Dimension
---------------------------------------------------------------
-- This query checks if there are any records in gold.fact_sales that do not have a
-- corresponding customer in gold.dim_customers.
SELECT f.*
FROM gold.fact_sales f
LEFT JOIN gold.dim_customers c ON c.customer_key = f.customer_key
WHERE c.customer_key IS NULL;

---------------------------------------------------------------
-- Section 4: Referential Integrity for Fact Sales - Product Dimension
---------------------------------------------------------------
-- This query checks if there are any records in gold.fact_sales that do not have a
-- corresponding product in gold.dim_products.
SELECT f.*
FROM gold.fact_sales f
LEFT JOIN gold.dim_products p ON p.product_key = f.product_key
WHERE p.product_key IS NULL;
